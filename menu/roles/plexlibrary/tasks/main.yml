#########################################################################
# Title:         Cloudbox: Python-PlexLibrary Role                      #
# Author(s):     desimaniac                                             #
# URL:           https://github.com/cloudbox/cloudbox                   #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Create python-plexlibrary directories
  file: "path={{ item }} state=directory owner={{ user.name }} group={{ user.name }} recurse=yes"
  with_items:
    - "/opt/appdata/python-plexlibrary"

- name: Server ID
  shell: 'cat /var/plexguide/pg.serverid'
  register: serverid

- name: Trakt.tv User
  shell: 'cat /var/plexguide/plexlibrary/trak.user'
  register: tuser
  ignore_errors: True

- name: Trakt.tv Client
  shell: 'cat /var/plexguide/plexlibrary/trak.client'
  register: tclient
  ignore_errors: True

- name: Trakt.tv Secret
  shell: 'cat /var/plexguide/plexlibrary/trak.secret'
  register: tsecret
  ignore_errors: True

- name: Media Path
  shell: 'cat /var/plexguide/plexlibrary/plex.library'
  register: spath
  ignore_errors: True

- name: Recipe Name
  shell: 'cat /var/plexguide/plexlibrary/recipe.name'
  register: rname
  ignore_errors: True

- name: Library Type
  shell: 'cat /var/plexguide/plexlibrary/library.type'
  register: ltype
  ignore_errors: True

- name: Trakt List Source URL
  shell: 'cat /var/plexguide/plexlibrary/source.url'
  register: slurl
  ignore_errors: True

- name: Clone python-plexlibrary
  git:
    repo: "https://github.com/adamgot/python-plexlibrary.git"
    dest: "/opt/appdata/python-plexlibrary"
    version: master
    force: yes
  become: yes
  become_user: '1000'

- name: Install pip requirements
  pip:
    requirements: "/opt/appdata/python-plexlibrary/requirements.txt"
    executable: pip

- name: Check config exists
  stat:
    path: "/opt/appdata/python-plexlibrary/config.yml"
  register: python_plexlibrary_config

- name: Create config from template
  copy:
    src: config.j2
    dest: "/opt/appdata/python-plexlibrary/config.yml"
    owner: '1000'
    group: '1000'
    mode: 0775
    force: no
  when: not python_plexlibrary_config.stat.exists

- name: Add plex url to config file
  shell: |
    yyq w -i /opt/appdata/python-plexlibrary/config.yml plex.baseurl 'https://plex./%7B%7B user.domain }}:443'
  become: yes
  become_user: '1000'

- name: "Copy 'plexlibrary.sh' to '/opt/appdata/python-plexlibrary' folder"
  copy:
    src: "plexlibrary.sh"
    dest: "/opt/appdata/python-plexlibrary/plexlibrary.sh"
    owner: '1000'
    group: '1000'
    mode: 0775
    force: yes

- name: Set 'plexlibrary.sh' as executable
  file:
    path: "/opt/appdata/python-plexlibrary/plexlibrary.sh"
    mode: a+x

- name: "Create '/usr/local/bin' symlink"
  file:
    src: "/opt/appdata/python-plexlibrary/plexlibrary.sh"
    dest: "/usr/local/bin/plexlibrary"
    state: link

- name: "Add items to '.gitignore'"
  lineinfile:
    path: "/opt/appdata/python-plexlibrary/.gitignore"
    state: present
    insertafter: EOF
    line: '{{ item }}'
  with_items:
    - "recipes/example/*.yml"
    - "recipes/*.yml"
    - "plexlibrary.sh"
    - "*.log"

- name: "Schedule cron task for weekly update."
  cron:
    name: "Python-PlexLibrary"
    user: '1000'
    job: "/opt/appdata/python-plexlibrary/plexlibrary.sh"
    special_time: weekly
    state: present

- name: Set plex.user fact | token
  shell: 'cat /var/plexguide/plexlibrary/plex.token'
  register: plex_auth_token

- name: Display Plex Auth Token
  debug:
    msg: "Plex Auth Token: {{ plex_auth_token.stdout }}"

- name: Remove old Install
  shell: 'sudo rm -rf /opt/appdata/python_plexlibrary'

- name: Create plex_library directories
  file: "path={{ item }} state=directory mode=0775 owner=1000 group=1000 recurse=yes"
  with_items:
    - /opt/appdata/python_plexlibrary

- name: Clone python_plexlibrary == HEAD
  git:
    repo: https://github.com/adamgot/python-plexlibrary.git
    dest: /opt/appdata/python_plexlibrary
    clone: yes
    version: HEAD
    force: yes
  ignore_errors: yes

- name: Clone python_plexlibrary repo == master
  git:
    repo: https://github.com/adamgot/python-plexlibrary.git
    dest: /opt/appdata/python_plexlibrary
    clone: yes
    version: master
    force: yes
  ignore_errors: yes

- name: Install pip requirements
  pip:
    requirements: /opt/appdata/python_plexlibrary/requirements.txt
    executable: pip3

- name: Check config exists
  stat:
    path: "/opt/appdata/python_plexlibrary/config.json"
  register: plex_library_config

- name: Import default config
  template:
    src: config.json.j2
    dest: /opt/appdata/python_plexlibrary/config.json
    owner: '1000'
    group: '1000'
    mode: 0775
    force: no
  when: not plex_library_config.stat.exists

- name: Set plexlibrary.py as executable
  file:
    path: /opt/appdata/python_plexlibrary/plexlibrary.py
    owner: '1000'
    group: '1000'
    mode: a+x

- name: "Create /usr/local/bin symlink"
  file:
    src: "/opt/appdata/python_plexlibrary/plexlibrary.py"
    dest: "/usr/local/bin/plexlibrary"
    state: link

# scripts permissions
- name: 'Setting permissions on scripts'
  shell: 'chown -cR 1000:1000 /opt/appdata/python_plexlibrary'

# scripts permissions
- name: 'Setting permissions on scripts'
  shell: 'chmod -cR 775 /opt/appdata/python_plexlibrary'

- name: Remove .githube folder and .git files
  file: "path={{ item }} state=absent"
  with_items:
    - '/opt/appdata/python_plexlibrary/.git'
    - '/opt/appdata/python_plexlibrary/.github'
    - '/opt/appdata/python_plexlibrary/assets'
    - '/opt/appdata/python_plexlibrary/.gitignore'

- name: "Copy 'plexlibrary.sh' to '/opt/appdata/python-plexlibrary' folder"
  copy:
    src: "plexlibrary.sh"
    dest: "/opt/appdata/python-plexlibrary/plexlibrary.sh"
